/* Automatically generated by wasm2c */
#ifndef WATCH_H_GENERATED_
#define WATCH_H_GENERATED_

#include <stdint.h>

#include "wasm-rt.h"

/* TODO(binji): only use stdint.h types in header */
#ifndef WASM_RT_CORE_TYPES_DEFINED
#define WASM_RT_CORE_TYPES_DEFINED
typedef uint8_t u8;
typedef int8_t s8;
typedef uint16_t u16;
typedef int16_t s16;
typedef uint32_t u32;
typedef int32_t s32;
typedef uint64_t u64;
typedef int64_t s64;
typedef float f32;
typedef double f64;
#endif

#ifdef __cplusplus
extern "C" {
#endif

struct Z_env_instance_t;
struct Z_wasi_snapshot_preview1_instance_t;

typedef struct Z_watch_instance_t {
  struct Z_env_instance_t* Z_env_instance;
  struct Z_wasi_snapshot_preview1_instance_t* Z_wasi_snapshot_preview1_instance;
  u32 w2c_g0;
  u32 w2c_g1;
  u32 w2c_g2;
  u32 w2c_g3;
  u32 w2c___start_em_asm;
  u32 w2c___stop_em_asm;
  u32 w2c_g6;
  u32 w2c_g7;
  wasm_rt_memory_t w2c_memory;
  wasm_rt_funcref_table_t w2c___indirect_function_table;
} Z_watch_instance_t;

void Z_watch_init_module(void);
void Z_watch_instantiate(Z_watch_instance_t*, struct Z_env_instance_t*, struct Z_wasi_snapshot_preview1_instance_t*);
void Z_watch_free(Z_watch_instance_t*);

/* import: 'env' '__assert_fail' */
void Z_envZ___assert_fail(struct Z_env_instance_t*, u32, u32, u32, u32);
/* import: 'env' 'emscripten_asm_const_double' */
f64 Z_envZ_emscripten_asm_const_double(struct Z_env_instance_t*, u32, u32, u32);
/* import: 'env' 'emscripten_asm_const_int' */
u32 Z_envZ_emscripten_asm_const_int(struct Z_env_instance_t*, u32, u32, u32);
/* import: 'env' 'emscripten_clear_interval' */
void Z_envZ_emscripten_clear_interval(struct Z_env_instance_t*, u32);
/* import: 'env' 'emscripten_clear_timeout' */
void Z_envZ_emscripten_clear_timeout(struct Z_env_instance_t*, u32);
/* import: 'env' 'emscripten_memcpy_big' */
void Z_envZ_emscripten_memcpy_big(struct Z_env_instance_t*, u32, u32, u32);
/* import: 'env' 'emscripten_request_animation_frame' */
u32 Z_envZ_emscripten_request_animation_frame(struct Z_env_instance_t*, u32, u32);
/* import: 'env' 'emscripten_resize_heap' */
u32 Z_envZ_emscripten_resize_heap(struct Z_env_instance_t*, u32);
/* import: 'env' 'emscripten_set_blur_callback_on_thread' */
u32 Z_envZ_emscripten_set_blur_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_focus_callback_on_thread' */
u32 Z_envZ_emscripten_set_focus_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_interval' */
u32 Z_envZ_emscripten_set_interval(struct Z_env_instance_t*, u32, f64, u32);
/* import: 'env' 'emscripten_set_keydown_callback_on_thread' */
u32 Z_envZ_emscripten_set_keydown_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_keyup_callback_on_thread' */
u32 Z_envZ_emscripten_set_keyup_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_mousedown_callback_on_thread' */
u32 Z_envZ_emscripten_set_mousedown_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_mouseout_callback_on_thread' */
u32 Z_envZ_emscripten_set_mouseout_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_mouseup_callback_on_thread' */
u32 Z_envZ_emscripten_set_mouseup_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_timeout' */
u32 Z_envZ_emscripten_set_timeout(struct Z_env_instance_t*, u32, f64, u32);
/* import: 'env' 'emscripten_set_touchend_callback_on_thread' */
u32 Z_envZ_emscripten_set_touchend_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_set_touchstart_callback_on_thread' */
u32 Z_envZ_emscripten_set_touchstart_callback_on_thread(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'emscripten_sleep' */
void Z_envZ_emscripten_sleep(struct Z_env_instance_t*, u32);
/* import: 'wasi_snapshot_preview1' 'fd_write' */
u32 Z_wasi_snapshot_preview1Z_fd_write(struct Z_wasi_snapshot_preview1_instance_t*, u32, u32, u32, u32);

/* export: 'memory' */
wasm_rt_memory_t* Z_watchZ_memory(Z_watch_instance_t* instance);

/* export: '__wasm_call_ctors' */
void Z_watchZ___wasm_call_ctors(Z_watch_instance_t*);

/* export: 'main' */
u32 Z_watchZ_main(Z_watch_instance_t*, u32, u32);

/* export: '__indirect_function_table' */
wasm_rt_funcref_table_t* Z_watchZ___indirect_function_table(Z_watch_instance_t* instance);

/* export: 'malloc' */
u32 Z_watchZ_malloc(Z_watch_instance_t*, u32);

/* export: 'free' */
void Z_watchZ_free(Z_watch_instance_t*, u32);

/* export: '__errno_location' */
u32 Z_watchZ___errno_location(Z_watch_instance_t*);

/* export: 'fflush' */
u32 Z_watchZ_fflush(Z_watch_instance_t*, u32);

/* export: 'emscripten_stack_init' */
void Z_watchZ_emscripten_stack_init(Z_watch_instance_t*);

/* export: 'emscripten_stack_set_limits' */
void Z_watchZ_emscripten_stack_set_limits(Z_watch_instance_t*, u32, u32);

/* export: 'emscripten_stack_get_free' */
u32 Z_watchZ_emscripten_stack_get_free(Z_watch_instance_t*);

/* export: 'emscripten_stack_get_base' */
u32 Z_watchZ_emscripten_stack_get_base(Z_watch_instance_t*);

/* export: 'emscripten_stack_get_end' */
u32 Z_watchZ_emscripten_stack_get_end(Z_watch_instance_t*);

/* export: 'stackSave' */
u32 Z_watchZ_stackSave(Z_watch_instance_t*);

/* export: 'stackRestore' */
void Z_watchZ_stackRestore(Z_watch_instance_t*, u32);

/* export: 'stackAlloc' */
u32 Z_watchZ_stackAlloc(Z_watch_instance_t*, u32);

/* export: 'emscripten_stack_get_current' */
u32 Z_watchZ_emscripten_stack_get_current(Z_watch_instance_t*);

/* export: '__start_em_asm' */
u32* Z_watchZ___start_em_asm(Z_watch_instance_t* instance);

/* export: '__stop_em_asm' */
u32* Z_watchZ___stop_em_asm(Z_watch_instance_t* instance);

/* export: 'dynCall_idi' */
u32 Z_watchZ_dynCall_idi(Z_watch_instance_t*, u32, f64, u32);

/* export: 'dynCall_vi' */
void Z_watchZ_dynCall_vi(Z_watch_instance_t*, u32, u32);

/* export: 'dynCall_iiii' */
u32 Z_watchZ_dynCall_iiii(Z_watch_instance_t*, u32, u32, u32, u32);

/* export: 'dynCall_iii' */
u32 Z_watchZ_dynCall_iii(Z_watch_instance_t*, u32, u32, u32);

/* export: 'dynCall_v' */
void Z_watchZ_dynCall_v(Z_watch_instance_t*, u32);

/* export: 'dynCall_viii' */
void Z_watchZ_dynCall_viii(Z_watch_instance_t*, u32, u32, u32, u32);

/* export: 'dynCall_vii' */
void Z_watchZ_dynCall_vii(Z_watch_instance_t*, u32, u32, u32);

/* export: 'dynCall_iiiiii' */
u32 Z_watchZ_dynCall_iiiiii(Z_watch_instance_t*, u32, u32, u32, u32, u32, u32);

/* export: 'dynCall_ii' */
u32 Z_watchZ_dynCall_ii(Z_watch_instance_t*, u32, u32);

/* export: 'dynCall_jiji' */
u32 Z_watchZ_dynCall_jiji(Z_watch_instance_t*, u32, u32, u32, u32, u32);

/* export: 'dynCall_iidiiii' */
u32 Z_watchZ_dynCall_iidiiii(Z_watch_instance_t*, u32, u32, f64, u32, u32, u32, u32);

/* export: 'asyncify_start_unwind' */
void Z_watchZ_asyncify_start_unwind(Z_watch_instance_t*, u32);

/* export: 'asyncify_stop_unwind' */
void Z_watchZ_asyncify_stop_unwind(Z_watch_instance_t*);

/* export: 'asyncify_start_rewind' */
void Z_watchZ_asyncify_start_rewind(Z_watch_instance_t*, u32);

/* export: 'asyncify_stop_rewind' */
void Z_watchZ_asyncify_stop_rewind(Z_watch_instance_t*);

/* export: 'asyncify_get_state' */
u32 Z_watchZ_asyncify_get_state(Z_watch_instance_t*);

#ifdef __cplusplus
}
#endif

#endif  /* WATCH_H_GENERATED_ */
